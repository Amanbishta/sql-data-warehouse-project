/*
============================================================================
DDL Script: Create Tables
============================================================================
Script Purpose:
  This script create tables in the 'silver' schema, dropping existing tables
  if they already exist.
  Run this script to re-define the DDL structure of 'bronze' Tables
============================================================================
*/

IF OBJECT_ID ('silver.erp_CUST_AZ12', 'U') IS NOT NULL
	DROP TABLE silver.erp_CUST_AZ12;
CREATE TABLE silver.erp_CUST_AZ12(
	CID NVARCHAR(50),
	BDATE DATE,
	GEN NVARCHAR(50),
	dwh_create_date DATETIME2 DEFAULT GETDATE()
);

IF OBJECT_ID ('silver.erp_LOC_A101', 'U') IS NOT NULL
	DROP TABLE silver.erp_LOC_A101;
CREATE TABLE silver.erp_LOC_A101(
	CID NVARCHAR(50),
	CNTRY NVARCHAR(50),
	dwh_create_date DATETIME2 DEFAULT GETDATE()
);

IF OBJECT_ID ('silver.erp_PX_CAT_G1V2', 'U') IS NOT NULL
	DROP TABLE silver.erp_PX_CAT_G1V2;
CREATE TABLE silver.erp_PX_CAT_G1V2(
	ID NVARCHAR(50),
	CAT NVARCHAR(50),
	SUBCAT NVARCHAR(50),
	MAINTENANCE NVARCHAR(50),
	dwh_create_date DATETIME2 DEFAULT GETDATE()
);

-- 
IF OBJECT_ID('silver.crm_sales_detals', 'U') IS NOT NULL
	DROP TABLE silver.crm_sales_detals;
CREATE TABLE silver.crm_sales_detals (
	sls_ord_num NVARCHAR(50),
	sls_prd_key NVARCHAR(50),
	sls_cust_id SMALLINT,
	sls_order_dt DATE,
	sls_ship_dt DATE,
	sls_due_dt DATE,
	sls_sales SMALLINT,
	sls_quantity INT,
	sls_price SMALLINT,
	dwh_create_date DATETIME2 DEFAULT GETDATE()
);

IF OBJECT_ID('silver.crm_cust_info', 'U') IS NOT NULL
	DROP TABLE silver.crm_cust_info;
CREATE TABLE silver.crm_cust_info(
	cst_id INT,
	cst_key NVARCHAR(50),
	cst_firstname NVARCHAR(50),
	cst_lastname NVARCHAR(50),
	cst_marital_status NVARCHAR(50),
	cst_gndr NVARCHAR(50),
	cst_create_date DATE,
	dwh_create_date DATETIME2 DEFAULT GETDATE() -- ADDITIONAL
);

IF OBJECT_ID('silver.crm_prd_info', 'U') IS NOT NULL
	DROP TABLE silver.crm_prd_info;
CREATE TABLE silver.crm_prd_info(
	prd_id INT,
	cat_id NVARCHAR(50),
	prd_key NVARCHAR(50),
	prd_num NVARCHAR(50),
	prd_cost INT,
	prd_line NVARCHAR(50),
	prd_start_dt DATE,
	prd_end_dt DATE,
	dwh_create_date DATETIME2 DEFAULT GETDATE()
);

Select * from silver.crm_prd_info;

/* ======================================================================
 -- INSERT INTO SILVER
 =================================================================== */

 
INSERT INTO silver.crm_cust_info(
cst_id, 
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date)

SELECT cst_id,
cst_key,
TRIM(cst_firstname) AS cst_firstname,
TRIM(cst_lastname) as cst_lastname, 
CASE WHEN UPPER(TRIM(cst_gndr)) ='F' THEN 'Female'
	WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
	ELSE 'N/A'
END cst_gndr,

CASE WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
	 WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
	 ELSE 'N/A'
END cst_marital_status,
cst_create_data 
FROM 
(select *, row_number() over(PARTITION BY cst_id order by cst_create_data desc)
as flag_last
from bronze.crm_cust_info
where cst_id IS NOT NULL) t
where flag_last = 1;
 /*
 ===================================================================
 INSERT INTO silver.crm_prd_info
 ===================================================================
 */

 INSERT INTO silver.crm_prd_info(
	prd_id,
	cat_id,
	prd_key,
	prd_num,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt
 )
 SELECT 
	prd_id,
	REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_id, -- SUBSTRING() function use to get sub-part of an value
	SUBSTRING(prd_key, 7, LEN(prd_key)) AS prd_key, -- Tell the end
	prd_nm,
	ISNULL(prd_cost, 0) AS prd_cost, -- Replace NULL VALUE to any value
	CASE UPPER(TRIM(prd_line))
		WHEN   'M' THEN 'Mountain'
		WHEN   'R' THEN 'Road'
		WHEN   'S' THEN 'Other Sales'
		WHEN   'T' THEN 'Touring'
		ELSE 'N/A'
	END AS prd_line, -- Map product line codes to descriptive values
	prd_start_dt,
	LEAD(prd_start_dt) OVER(PARTITION BY prd_key ORDER BY prd_start_dt) AS prd_end_dt
FROM bronze.crm_prd_info;


